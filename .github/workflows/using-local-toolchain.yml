# Copyright Kani Contributors
# SPDX-License-Identifier: Apache-2.0 OR MIT

# 1. Checks --use-local-toolchain

name: Test use-local-toolchain
on:
  pull_request:
  push:
    # Run on changes to branches but not tags.
    branches:
      - '**'


jobs:
  test-use-local-toolchain:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Kani
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
          submodules: 'true'

      - name: Setup Kani Dependencies
        uses: ./.github/actions/setup
        with:
          os: ubuntu-20.04

      - name: Build Kani
        run: cargo build-dev

      - name: Extract nightly version date from rust-toolchain.toml
        id: extract-date
        run: |
          DATE=$(grep 'channel' rust-toolchain.toml | cut -d '=' -f2 | tr -d ' "' | cut -d'-' -f2-)
          echo "Nightly date: $DATE"
          echo "DATE=$DATE" >> $GITHUB_ENV

      - name: Remove installed Rust toolchain
        run: rustup toolchain remove nightly-$DATE

      - name: Create a custom toolchain directory
        run: mkdir -p ${{ github.workspace }}/custom_toolchain

      - name: Fetch the nightly tarball
        run: |
          echo "Downloading Rust toolchain from rust server."
          curl --proto '=https' --tlsv1.2 -O https://static.rust-lang.org/dist/$DATE/rust-nightly-x86_64-unknown-linux-gnu.tar.gz
          tar -xzf rust-nightly-x86_64-unknown-linux-gnu.tar.gz
          ./rust-nightly-x86_64-unknown-linux-gnu/install.sh --prefix=${{ github.workspace }}/custom_toolchain

      - name: Ensure installation is correct
        run: |
          ls ${{ github.workspace }}/custom_toolchain/
          ls -la ~/.rustup/toolchains/
          ${{github.workspace}}/target/kani/bin/cargo-kani setup --use-local-toolchain ${{ github.workspace }}/custom_toolchain/
          ls -la ~/.rustup/toolchains/

      - name: Run tests
        # TODO: Customize compiletest to run custom kani. For now, just run a few cargo kani tests.
        run: |
          for dir in $${ github.workspace }}/tests/cargo-ui; do
            >&2 echo "Running test $dir"
            pushd tests/cargo-kani/$dir
            ${{github.workspace}}/target/kani/bin/cargo-kani
            popd
          done
